// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  firstName   String        @map("first_name")
  lastName    String        @map("last_name")
  email       String?       @unique
  mobile      String?       @unique
  password    String
  role        String?        @default("user")
  bankAccount Int?           @map("bank_account")
  createdAt   DateTime      @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime      @updatedAt @map("updated_at") @db.Timestamp(0)
  senders     Transaction[] @relation("sender")
  recievers   Transaction[] @relation("reciever")
  trips       Trip[]
  comments    Comment[]
  Booking     Booking[]

  @@map("users")
}

model Trip {
  id          Int       @id @default(autoincrement())
  date        DateTime  @db.Date
  destination String
  coverImage  String
  price       Int
  available   Int
  isComplete  Boolean   @default(false) @map("is_complete")
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamp(0)
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @map("user_id")
  comments    Comment[]
  Booking     Booking[]

  @@map("trips")
}

model Comment {
  id        Int       @id @default(autoincrement())
  comment   String
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamp(0)
  deletedAt DateTime? @map("deleted_at") @db.Timestamp(0)
  user      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  trip      Trip?     @relation(fields: [tripId], references: [id])
  tripId    Int?

  @@map("comments")
}

model Booking {
  id        Int       @id @default(autoincrement())
  amount    Int
  total     Int
  isPaid    Boolean   @default(false) @map("is_paid")
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  deletedAt DateTime? @map("deleted_at") @db.Timestamp(0)
  user      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  trip      Trip?     @relation(fields: [tripId], references: [id])
  tripId    Int?

  @@map("bookings")
}

model Transaction {
  id                Int       @id @default(autoincrement())
  total             Int
  type              String
  moneyTransferSlip String    @map("money_transfer_slip")
  createdAt         DateTime  @default(now()) @map("created_at") @db.Timestamp(0)
  deletedAt         DateTime? @map("deleted_at") @db.Timestamp(0)
  sender            User      @relation(name: "sender", fields: [senderId], references: [id])
  senderId          Int       @map("sender_id")
  reciever          User      @relation(name: "reciever", fields: [recieverId], references: [id])
  recieverId        Int       @map("reciever_id")

  @@map("transactions")
}
